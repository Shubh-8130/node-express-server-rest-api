pipeline {
    agent any
    environment {
        DIRECTORY_NAME = 'node-express-server-rest-api'
        REPOSITORY_URL = 'https://github.com/Shubh-8130/node-express-server-rest-api.git'
        SSH_KEY_PATH = '/Users/shubhamsharma/jenkins/my-key-terr.pem'
        REMOTE_HOST = 'ubuntu@52.207.223.9'
    }
    stages {
        stage('Build and Deploy') {
            steps {
                script {
                    // Connect to the server using SSH and execute commands
                    sh """
                        ssh -i ${env.SSH_KEY_PATH} ${env.REMOTE_HOST} '
                            # Define the directory name and repository URL
                            directory_name=${env.DIRECTORY_NAME}
                            repository_url=${env.REPOSITORY_URL}
                            cd ~

                            # Check if the directory exists
                            if [ -d "$directory_name" ]; then
                                # If the directory exists, delete it
                                echo "Deleting existing directory: $directory_name"
                                rm -rf "$directory_name"
                            fi

                            # Clone the repository
                            echo "Cloning repository into $directory_name"
                            git clone "$repository_url" "$directory_name"
                            cd "$directory_name"

                            # Additional commands or operations can be added here if needed
                            pid=\$(lsof -i :3000 | awk 'NR==2 {print \$2}')
                            echo "The PID is: \$pid"
                            echo "Killing the previous pid . . ."
                            echo " . . . . ."
                            echo " . . . . ."

                            kill -9 \$pid

                            echo "Process completed successfully."
                            sudo apt update -y
                            sudo apt install nodejs npm -y
                            npm install -y
                            npm update -y
                            npm start
                            sleep 10  # Wait for the Node.js process to start (adjust as needed)
                            exit
                        '
                    """
                    
                    // Check if the node process is running
                    def nid = sh(script: 'ssh -i ${env.SSH_KEY_PATH} ${env.REMOTE_HOST} "lsof -i :3000 | awk 'NR==2 {print \$2}'"'

                    if (nid && nid != '0') {
                        currentBuild.result = 'SUCCESS'
                    } else {
                        error 'Node.js process not running or invalid process ID.'
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
    }
}
