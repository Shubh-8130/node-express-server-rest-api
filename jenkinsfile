pipeline {
    agent any
    environment {
        DIRECTORY_NAME = 'node-express-server-rest-api'
        REPOSITORY_URL = 'https://github.com/Shubh-8130/node-express-server-rest-api.git'
        SSH_KEY_PATH = '/Users/shubhamsharma/jenkins/my-key-terr.pem'
        REMOTE_HOST = 'ec2-user@54.237.95.2'
    }
    stages {
        stage('Build and Deploy') {
            steps {
                script {
                    // Connect to the server using SSH and execute commands
                    sh """
                        ssh -i ${env.SSH_KEY_PATH} ${env.REMOTE_HOST} '
                            # Define the directory name and repository URL
                            directory_name=${env.DIRECTORY_NAME}
                            repository_url=${env.REPOSITORY_URL}
                            cd ~

                            # Check if the directory exists
                            if [ -d "$directory_name" ]; then
                                # If the directory exists, delete it
                                echo "Deleting existing directory: $directory_name"
                                rm -rf "$directory_name"
                            fi

                            # Clone the repository
                            echo "Cloning repository into $directory_name"
                            sudo yum install git
                            sudo git clone "$repository_url" "$directory_name"
                            cd "$directory_name"


                            echo "Process completed successfully."
                            sudo yum install npm -y
                            sudo npm install -y
                            sudo ./npm.sh

                            exit
                        '
                    """
                    
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline completed'

            script {
                currentBuild.result = currentBuild.resultIsBetterOrEqualTo('UNSTABLE') ? currentBuild.result : 'SUCCESS'
            }

            echo "Pipeline Status: ${currentBuild.result}"
        }
    }
}
